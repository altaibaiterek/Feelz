from aiogram import Router, F

from aiogram.filters import Command, CommandStart

from aiogram.types import CallbackQuery, Message

from apps.bot.modules.main.keyboards import get_group_lessons_list, get_lesson_menu, get_student_groups_list
from apps.bot.utils.orm_queries import get_lesson_info_by_id, get_student_group_by_id, get_student_group_id_by_lesson
from apps.bot.utils.utils import get_date_info, get_info_answer


main_router = Router(name="Main menu")


@main_router.message(Command('menu'))
@main_router.message(CommandStart())
async def main_view(
        message: Message,
) -> None:
    
    date_info = await get_date_info()
    answer_text = f"""
üìÖ *–î–∞—Ç–∞:* {date_info}

‚ú® *–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:*
"""
    
    await get_info_answer(
        update_type=message,
        answer_text=answer_text,
        keyboard=await get_student_groups_list(),
    )


@main_router.callback_query(F.data.startswith("student_group_"))
async def group_view(
        callback: CallbackQuery,
) -> None:

    student_group_id = callback.data.split("student_group_")[1]
    student_group = await get_student_group_by_id(student_group_id)

    callback_answer_text = student_group.name

    answer_text = f"""
üë• *–í—ã–±—Ä–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞:* {student_group.name}

üìñ *–û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã:*
{student_group.description if student_group.description else '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.'}

‚ú® *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:*
"""

    await get_info_answer(
        update_type=callback,
        answer_text=answer_text,
        callback_answer_text=callback_answer_text,
        keyboard=await get_group_lessons_list(student_group_id),
    )


@main_router.callback_query(F.data.startswith("lesson_"))
async def lesson_view(
        callback: CallbackQuery,
) -> None:

    lesson_id = callback.data.split("lesson_")[1]
    lesson = await get_lesson_info_by_id(lesson_id)

    student_group_id = await get_student_group_id_by_lesson(lesson)

    callback_answer_text = lesson.topic
    answer_text = f"""
üìö *–£—Ä–æ–∫:* {lesson.topic}

üìù *–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —É—Ä–æ–∫–∞:*
{lesson.body if lesson.body else '–ù–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —É—Ä–æ–∫–µ.'}

‚ú® *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:*
"""

    await get_info_answer(
        update_type=callback,
        answer_text=answer_text,
        callback_answer_text=callback_answer_text,
        keyboard=await get_lesson_menu(student_group_id, lesson),
    )


@main_router.callback_query(F.data == 'back_to_menu')
async def back_to_menu_view(
        callback: CallbackQuery,
) -> None:

    await main_view(callback.message)
    await callback.answer('üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    
